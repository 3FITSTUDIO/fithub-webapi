// <auto-generated />
using System;
using FitHubWebApi.Infrastructure.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitHubWebApi.Infrastructure.Migrations
{
    [DbContext(typeof(FitHubWebApiContext))]
    partial class FitHubWebAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AccountTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountType");
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntryId")
                        .HasColumnType("int");

                    b.Property<int?>("EntryTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("LogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntryTypeId");

                    b.HasIndex("LogId");

                    b.ToTable("Entry");
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.EntryType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("EntryTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntryType");
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Height", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EntryId")
                        .IsUnique();

                    b.ToTable("Height");
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Kcal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EntryId")
                        .IsUnique();

                    b.ToTable("Kcal");
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Bicep")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Calf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Chest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EntryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Forearm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Neck")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Stomach")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Thigh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Waist")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EntryId")
                        .IsUnique();

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Weight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EntryId")
                        .IsUnique();

                    b.ToTable("Weight");
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Entry", b =>
                {
                    b.HasOne("FitHubWebApi.Infrastructure.Models.EntryType", "EntryType")
                        .WithMany("Entry")
                        .HasForeignKey("EntryTypeId");

                    b.HasOne("FitHubWebApi.Infrastructure.Models.Log", "Log")
                        .WithMany()
                        .HasForeignKey("LogId");
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Height", b =>
                {
                    b.HasOne("FitHubWebApi.Infrastructure.Models.Entry", "Entry")
                        .WithOne("Height")
                        .HasForeignKey("FitHubWebApi.Infrastructure.Models.Height", "EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Kcal", b =>
                {
                    b.HasOne("FitHubWebApi.Infrastructure.Models.Entry", "Entry")
                        .WithOne("Kcal")
                        .HasForeignKey("FitHubWebApi.Infrastructure.Models.Kcal", "EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Log", b =>
                {
                    b.HasOne("FitHubWebApi.Infrastructure.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Measurement", b =>
                {
                    b.HasOne("FitHubWebApi.Infrastructure.Models.Entry", "Entry")
                        .WithOne("Measurement")
                        .HasForeignKey("FitHubWebApi.Infrastructure.Models.Measurement", "EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.User", b =>
                {
                    b.HasOne("FitHubWebApi.Infrastructure.Models.AccountType", "AccountType")
                        .WithMany("User")
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FitHubWebApi.Infrastructure.Models.Weight", b =>
                {
                    b.HasOne("FitHubWebApi.Infrastructure.Models.Entry", "Entry")
                        .WithOne("Weight")
                        .HasForeignKey("FitHubWebApi.Infrastructure.Models.Weight", "EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
